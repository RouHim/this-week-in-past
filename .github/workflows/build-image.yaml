name: Build container image
on:
  push:
  pull_request:
    types:
      - opened
  workflow_dispatch: # allow manual execution

jobs:

  check-config:
    name: Check config files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          hide-progress: false
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

  check-repo:
    name: Check repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

  check-code-style:
    name: Check code style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly

      - uses: Swatinem/rust-cache@v1 # use /rust/cargo caching

      - name: Check the code style
        run: cargo fmt --all -- --check

  check-code:
    name: Check code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly

      - uses: Swatinem/rust-cache@v1 # use /rust/cargo caching

      - name: Verify code
        run: cargo clippy

  test:
    name: Run application tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly

      - uses: Swatinem/rust-cache@v1 # use /rust/cargo caching

      - name: Test code
        run: cargo test

  build:
    name: Build container image
    needs: [ check-config, check-repo, check-code-style, check-code, test ]
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1 # use the new docker build backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: nightly

      - name: Prepare build environment
        run: |
          sudo apt update && sudo apt install -y musl-tools
          rustup target add x86_64-unknown-linux-musl

      - uses: Swatinem/rust-cache@v1 # use /rust/cargo caching

      - name: Build application
        run: |
          cargo build --release --target x86_64-unknown-linux-musl

      - name: Build container image
        run: |
          docker build -t rouhim/this-week-in-past:${{ github.sha }} .
          docker save rouhim/this-week-in-past:${{ github.sha }} > this-week-in-past.tar

      - uses: actions/upload-artifact@v3
        with:
          name: docker-artifact
          path: this-week-in-past.tar

  scan-container:
    name: Scan container for vulnerabilities
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker Image
        uses: actions/download-artifact@v2
        with:
          name: docker-artifact
          path: .

      - name: restore docker image
        run: docker load --input this-week-in-past.tar

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'rouhim/this-week-in-past:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

  test-container:
    name: Test container image
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker Image
        uses: actions/download-artifact@v2
        with:
          name: docker-artifact
          path: .

      - name: restore docker image
        run: docker load --input this-week-in-past.tar

      - name: Prepare test env
        run: | 
          mkdir -p /tmp/test
          wget https://raw.githubusercontent.com/ianare/exif-samples/master/jpg/gps/DSCN0010.jpg -O /tmp/test/DSCN0010.jpg          

      - name: Start test container
        run: docker run -d --name test-container -p 8080:8080 -v /tmp/test:/resources rouhim/this-week-in-past:${{ github.sha }}

      - name: Test container web api
        run: wget -q -O /dev/null -t 1 -T 2 http://localhost:8080/api/health

      - name: Cleanup
        run: docker kill test-container && docker rm test-container

  push-container:
    name: Push container image
    needs: [ scan-container, test-container ]
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' # only push the image if the branch is main
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Download Docker Image
        uses: actions/download-artifact@v2
        with:
          name: docker-artifact
          path: .

      - name: restore docker image
        run: docker load --input this-week-in-past.tar

      - name: Push image to Docker Hub
        run: |
          docker tag rouhim/this-week-in-past:${{ github.sha }} rouhim/this-week-in-past:latest
          docker push rouhim/this-week-in-past:latest

      - name: Update docker hub description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: rouhim/this-week-in-past